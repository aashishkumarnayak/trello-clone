{"version":3,"sources":["actions/listsActions.js","actions/cardsActions.js","actions/index.js","reducers/listsReducer.js","reducers/cardsReducer.js","reducers/boardsReducer.js","reducers/boardOrderReducer.js","reducers/activeBoardReducer.js","reducers/index.js","store/index.js","components/TrelloForm.js","components/TrelloButton.js","components/TrelloCard.js","components/TrelloOpenForm.js","components/TrelloCreate.js","components/TrelloList.js","components/TrelloBoard.js","actions/boardActions.js","components/BoardThumbnail.js","components/Home.js","routes/index.js","components/App.js","serviceWorker.js","index.js"],"names":["addList","title","dispatch","getState","boardID","activeBoard","id","uuid","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listID","text","ADD_CARD","EDIT_CARD","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","SET_ACTIVE_BOARD","ADD_BOARD","initialState","list-0","cards","board","listsReducer","state","arguments","length","undefined","action","_action$payload","newList","concat","_objectSpread","_defineProperty","_action$payload2","list","push","_action$payload3","_list$cards","card","splice","apply","_toConsumableArray","_listEnd$cards","_objectSpread5","listStart","listEnd","_action$payload4","newCards","filter","cardID","_action$payload5","newTitle","newState","card-0","cardsReducer","newCard","newText","board-0","lists","boardsReducer","newListID","newLists","pulledOutList","newID","newBoard","console","log","boardOrderReducer","activeBoardReducer","combineReducers","boards","boardOrder","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","Container","styled","div","_templateObject","_taggedTemplateLiteral","StyledCard","Card","_templateObject2","StyledTextArea","Textarea","_templateObject3","ButtonContainer","_templateObject4","StyledIcon","Icon","_templateObject5","TrelloForm","React","memo","_ref","_ref$text","onChange","closeForm","children","placeholder","createElement","autoFocus","onFocus","e","target","select","value","onBlur","onMouseDown","StyledButton","Button","TrelloButton","onClick","variant","CardContainer","EditButton","DeleteButton","TrelloCard","index","_useState","useState","_useState2","_slicedToArray","isEditing","setIsEditing","_useState3","_useState4","cardText","setText","handleChange","saveCard","preventDefault","editCard","handleDeleteCard","deleteCard","Draggable","String","provided","Object","assign","draggableProps","dragHandleProps","ref","innerRef","onDoubleClick","fontSize","CardContent","Typography","connect","TrelloOpenForm","buttonTextOpacity","buttonTextColor","buttonTextBackground","OpenFormButton","style","flexShrink","TrelloCreate","_React$PureComponent","_getPrototypeOf2","_this","_classCallCheck","this","_len","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","call","formOpen","openForm","setState","handleInputChange","handleAddList","props","handleAddCard","_this$props","renderOpenForm","buttonText","_inherits","_createClass","PureComponent","ListContainer","StyledInput","input","TitleContainer","ListTitle","h4","listTitle","setListTitle","handleFocus","handleFinishEditing","editTitle","handleDeleteList","deleteList","Droppable","droppableId","onSubmit","droppableProps","map","ListsContainer","TrelloBoard","_PureComponent","onDragEnd","result","destination","source","match","params","listOrder","DragDropContext","Link","to","color","direction","listCards","TrelloList","Thumbnail","Title","BoardThumbnail","Thumbnails","HomeContainer","CreateTitle","h3","CreateInput","newBoardTitle","setNewBoardTitle","handleSubmit","addBoard","textDecoration","textAlign","AppRouter","Router","Route","path","exact","component","Home","App","Routes","Boolean","window","location","hostname","_Store","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","GlobalStyle","createGlobalStyle","ReactDOM","render","Provider","PersistGate","loading","document","getElementById","$","bind","nodeName","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e54bc6dc.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addList = title => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    const id = uuid();\n    dispatch({\n      type: CONSTANTS.ADD_LIST,\n      payload: { title, boardID, id }\n    });\n  };\n};\n\nexport const sort = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  draggableId,\n  type\n) => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    dispatch({\n      type: CONSTANTS.DRAG_HAPPENED,\n      payload: {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n        draggableId,\n        type,\n        boardID\n      }\n    });\n  };\n};\n\nexport const editTitle = (listID, newTitle) => {\n  return {\n    type: CONSTANTS.EDIT_LIST_TITLE,\n    payload: {\n      listID,\n      newTitle\n    }\n  };\n};\n\nexport const deleteList = listID => {\n  return (dispatch, getState) => {\n    const boardID = getState().activeBoard;\n    return dispatch({\n      type: CONSTANTS.DELETE_LIST,\n      payload: {\n        listID,\n        boardID\n      }\n    });\n  };\n};\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const addCard = (listID, text) => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_CARD,\n    payload: { text, listID, id }\n  };\n};\n\nexport const editCard = (id, listID, newText) => {\n  return {\n    type: CONSTANTS.EDIT_CARD,\n    payload: { id, listID, newText }\n  };\n};\n\nexport const deleteCard = (id, listID) => {\n  return {\n    type: CONSTANTS.DELETE_CARD,\n    payload: { id, listID }\n  };\n};\n","export * from \"./listsActions\";\nexport * from \"./cardsActions\";\nexport * from \"./boardActions\";\n\nexport const CONSTANTS = {\n  ADD_CARD: \"ADD_CARD\",\n  ADD_LIST: \"ADD_LIST\",\n  DRAG_HAPPENED: \"DRAG_HAPPENED\",\n  EDIT_CARD: \"EDIT_CARD\",\n  DELETE_CARD: \"DELETE_CARD\",\n  EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\n  DELETE_LIST: \"DELETE_LIST\",\n  SET_ACTIVE_BOARD: \"SET_ACTIVE_BOARD\",\n  ADD_BOARD: \"ADD_BOARD\"\n};\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"list-0\": {\n    id: \"list-0\",\n    cards: [\"card-0\"],\n    title: \"myList\",\n    board: \"board-0\"\n  }\n};\n\nconst listsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { title, id } = action.payload;\n      const newList = {\n        title: title,\n        id: `list-${id}`,\n        cards: []\n      };\n\n      const newState = { ...state, [`list-${id}`]: newList };\n\n      return newState;\n    }\n\n    case CONSTANTS.ADD_CARD: {\n      const { listID, id } = action.payload;\n      const list = state[listID];\n      list.cards.push(`card-${id}`);\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      // draggin lists around - the listOrderReducer should handle this\n      if (type === \"list\") {\n        return state;\n      }\n\n      // in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state[droppableIdStart];\n        const card = list.cards.splice(droppableIndexStart, 1);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n        return { ...state, [droppableIdStart]: list };\n      }\n\n      // other list\n      if (droppableIdStart !== droppableIdEnd) {\n        // find the list where the drag happened\n        const listStart = state[droppableIdStart];\n        // pull out the card from this list\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n        // find the list where the drag ended\n        const listEnd = state[droppableIdEnd];\n\n        // put the card in the new list\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n        return {\n          ...state,\n          [droppableIdStart]: listStart,\n          [droppableIdEnd]: listEnd\n        };\n      }\n      return state;\n\n    case CONSTANTS.DELETE_CARD: {\n      const { listID, id } = action.payload;\n\n      const list = state[listID];\n      const newCards = list.cards.filter(cardID => cardID !== id);\n\n      return { ...state, [listID]: { ...list, cards: newCards } };\n    }\n\n    case CONSTANTS.EDIT_LIST_TITLE: {\n      const { listID, newTitle } = action.payload;\n\n      const list = state[listID];\n      list.title = newTitle;\n      return { ...state, [listID]: list };\n    }\n\n    case CONSTANTS.DELETE_LIST: {\n      const { listID } = action.payload;\n      const newState = state;\n      delete newState[listID];\n      return newState;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"card-0\": {\n    text: \"Last Episode\",\n    id: `card-0`,\n    list: \"list-0\"\n  }\n};\n\nconst cardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_CARD: {\n      const { text, listID, id } = action.payload;\n\n      const newCard = {\n        text,\n        id: `card-${id}`,\n        list: listID\n      };\n\n      return { ...state, [`card-${id}`]: newCard };\n    }\n    case CONSTANTS.EDIT_CARD: {\n      const { id, newText } = action.payload;\n      const card = state[id];\n      card.text = newText;\n      return { ...state, [`card-${id}`]: card };\n    }\n\n    case CONSTANTS.DELETE_CARD: {\n      const { id } = action.payload;\n      const newState = state;\n      delete newState[id];\n      return newState;\n    }\n    default:\n      return state;\n  }\n};\n\nexport default cardsReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = {\n  \"board-0\": {\n    id: \"board-0\",\n    lists: [\"list-0\"],\n    title: \"myboard\"\n  }\n};\n\nconst boardsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_LIST: {\n      const { boardID, id } = action.payload;\n      const board = state[boardID];\n      const newListID = `list-${id}`;\n      const newLists = [...board.lists, newListID];\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.DRAG_HAPPENED: {\n      const { boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const {\n        droppableIndexEnd,\n        droppableIndexStart,\n\n        type\n      } = action.payload;\n\n      // draggin lists around\n      if (type === \"list\") {\n        const pulledOutList = lists.splice(droppableIndexStart, 1);\n        lists.splice(droppableIndexEnd, 0, ...pulledOutList);\n        board.lists = lists;\n\n        return { ...state, [boardID]: board };\n      }\n      return state;\n    }\n    case CONSTANTS.DELETE_LIST: {\n      const { listID, boardID } = action.payload;\n      const board = state[boardID];\n      const lists = board.lists;\n      const newLists = lists.filter(id => id !== listID);\n      board.lists = newLists;\n      return { ...state, [boardID]: board };\n    }\n\n    case CONSTANTS.ADD_BOARD: {\n      const { title, id } = action.payload;\n      const newID = `board-${id}`;\n      const newBoard = {\n        id: newID,\n        title,\n        lists: []\n      };\n\n      return { ...state, [newID]: newBoard };\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default boardsReducer;\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nconsole.log(uuid());\n\nconst initialState = [\"board-0\"];\n\nconst boardOrderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.ADD_BOARD: {\n      return [...state, `board-${action.payload.id}`];\n    }\n    default:\n      return state;\n  }\n};\n\nexport default boardOrderReducer;\n","import { CONSTANTS } from \"../actions\";\n\nconst initialState = null;\n\nconst activeBoardReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CONSTANTS.SET_ACTIVE_BOARD: {\n      return action.payload;\n    }\n\n    default:\n      return state;\n  }\n};\n\nexport default activeBoardReducer;\n","import { combineReducers } from \"redux\";\nimport listsReducer from \"./listsReducer\";\nimport cardsReducer from \"./cardsReducer\";\nimport boardsReducer from \"./boardsReducer\";\nimport boardOrderReducer from \"./boardOrderReducer\";\nimport activeBoardReducer from \"./activeBoardReducer\";\n\nexport default combineReducers({\n  lists: listsReducer,\n  cards: cardsReducer,\n  boards: boardsReducer,\n  boardOrder: boardOrderReducer,\n  activeBoard: activeBoardReducer\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n  let store = createStore(persistedReducer, applyMiddleware(thunk));\n  let persistor = persistStore(store);\n  return { store, persistor };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Textarea from \"react-textarea-autosize\";\nimport Card from \"@material-ui/core/Card\";\n\nconst Container = styled.div`\n  width: 284px;\n  margin-bottom: 8px;\n`;\n\nconst StyledCard = styled(Card)`\n  min-height: 85px;\n  padding: 6px 8px 2px;\n`;\n\nconst StyledTextArea = styled(Textarea)`\n  resize: none;\n  width: 100%;\n  overflow: hidden;\n  outline: none;\n  border: none;\n`;\n\nconst ButtonContainer = styled.div`\n  margin-top: 8px;\n  display: flex;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nconst StyledIcon = styled(Icon)`\n  margin-left: 8px;\n  cursor: pointer;\n`;\n\nconst TrelloForm = React.memo(\n  ({ list, text = \"\", onChange, closeForm, children }) => {\n    const placeholder = list\n      ? \"Enter list title...\"\n      : \"Enter a title for this card...\";\n\n    const handleFocus = e => {\n      e.target.select();\n    };\n    \n    return (\n      <Container>\n        <StyledCard>\n          <StyledTextArea\n            placeholder={placeholder}\n            autoFocus\n            onFocus={handleFocus}\n            value={text}\n            onChange={e => onChange(e)}\n            onBlur={closeForm}\n          />\n        </StyledCard>\n        <ButtonContainer>\n          {children}\n          <StyledIcon onMouseDown={closeForm}>close</StyledIcon>\n        </ButtonContainer>\n      </Container>\n    );\n  }\n);\n\nexport default TrelloForm;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Button from \"@material-ui/core/Button\";\n\nconst StyledButton = styled(Button)`\n  && {\n    color: white;\n    background: #5aac44;\n  }\n`;\n\nconst TrelloButton = ({ children, onClick }) => {\n  return (\n    <StyledButton variant=\"contained\" onMouseDown={onClick}>\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default TrelloButton;\n","import React, { useState } from \"react\";\nimport Card from \"@material-ui/core/Card\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloForm from \"./TrelloForm\";\nimport { editCard, deleteCard } from \"../actions\";\nimport { connect } from \"react-redux\";\nimport TrelloButton from \"./TrelloButton\";\n\nconst CardContainer = styled.div`\n  margin: 0 0 8px 0;\n  position: relative;\n  max-width: 100%;\n  word-wrap: break-word;\n`;\n\nconst EditButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  top: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst DeleteButton = styled(Icon)`\n  position: absolute;\n  display: none;\n  right: 5px;\n  bottom: 5px;\n  opacity: 0.5;\n  ${CardContainer}:hover & {\n    display: block;\n    cursor: pointer;\n  }\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst TrelloCard = React.memo(({ text, id, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [cardText, setText] = useState(text);\n\n  const closeForm = e => {\n    setIsEditing(false);\n  };\n\n  const handleChange = e => {\n    setText(e.target.value);\n  };\n\n  const saveCard = e => {\n    e.preventDefault();\n\n    dispatch(editCard(id, listID, cardText));\n    setIsEditing(false);\n  };\n\n  const handleDeleteCard = e => {\n    console.log(listID);\n    dispatch(deleteCard(id, listID));\n  };\n\n  const renderEditForm = () => {\n    return (\n      <TrelloForm text={cardText} onChange={handleChange} closeForm={closeForm}>\n        <TrelloButton onClick={saveCard}>Save</TrelloButton>\n      </TrelloForm>\n    );\n  };\n\n  const renderCard = () => {\n    return (\n      <Draggable draggableId={String(id)} index={index}>\n        {provided => (\n          <CardContainer\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            ref={provided.innerRef}\n            onDoubleClick={() => setIsEditing(true)}\n          >\n            <Card>\n              <EditButton\n                onMouseDown={() => setIsEditing(true)}\n                fontSize=\"small\"\n              >\n                edit\n              </EditButton>\n              <DeleteButton fontSize=\"small\" onMouseDown={handleDeleteCard}>\n                delete\n              </DeleteButton>\n\n              <CardContent>\n                <Typography>{text}</Typography>\n              </CardContent>\n            </Card>\n          </CardContainer>\n        )}\n      </Draggable>\n    );\n  };\n\n  return isEditing ? renderEditForm() : renderCard();\n});\n\nexport default connect()(TrelloCard);\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport styled from \"styled-components\";\n\nconst TrelloOpenForm = ({ list, children, onClick }) => {\n  const buttonTextOpacity = list ? 1 : 0.5;\n  const buttonTextColor = list ? \"white\" : \"inherit\";\n  const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n  const OpenFormButton = styled.div`\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    border-radius: 3px;\n    height: 36px;\n    margin-left: 8px;\n    width: 300px;\n    padding-left: 10px;\n    padding-right: 10px;\n    opacity: ${buttonTextOpacity};\n    color: ${buttonTextColor};\n    background-color: ${buttonTextBackground};\n  `;\n\n  return (\n    <OpenFormButton onClick={onClick}>\n      <Icon>add</Icon>\n      <p style={{ flexShrink: 0 }}>{children}</p>\n    </OpenFormButton>\n  );\n};\n\nexport default TrelloOpenForm;\n","import React from \"react\";\nimport Icon from \"@material-ui/core/Icon\";\nimport TrelloButton from \"./TrelloButton\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport styled from \"styled-components\";\nimport TrelloForm from \"./TrelloForm\";\nimport TrelloOpenForm from \"./TrelloOpenForm\";\n\nclass TrelloCreate extends React.PureComponent {\n  state = {\n    formOpen: false,\n    text: \"\"\n  };\n\n  openForm = () => {\n    this.setState({\n      formOpen: true\n    });\n  };\n\n  closeForm = e => {\n    this.setState({\n      formOpen: false\n    });\n  };\n\n  handleInputChange = e => {\n    this.setState({\n      text: e.target.value\n    });\n  };\n\n  handleAddList = () => {\n    const { dispatch } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addList(text));\n    }\n\n    return;\n  };\n\n  handleAddCard = () => {\n    const { dispatch, listID } = this.props;\n    const { text } = this.state;\n\n    if (text) {\n      this.setState({\n        text: \"\"\n      });\n      dispatch(addCard(listID, text));\n    }\n  };\n\n  renderOpenForm = () => {\n    const { list } = this.props;\n\n    const buttonText = list ? \"Add another list\" : \"Add another card\";\n    const buttonTextOpacity = list ? 1 : 0.5;\n    const buttonTextColor = list ? \"white\" : \"inherit\";\n    const buttonTextBackground = list ? \"rgba(0,0,0,.15)\" : \"inherit\";\n\n    const OpenFormButton = styled.div`\n      display: flex;\n      align-items: center;\n      cursor: pointer;\n      border-radius: 3px;\n      height: 36px;\n      margin-left: 8px;\n      width: 300px;\n      padding-left: 10px;\n      padding-right: 10px;\n      opacity: ${buttonTextOpacity};\n      color: ${buttonTextColor};\n      background-color: ${buttonTextBackground};\n    `;\n\n    return (\n      <OpenFormButton onClick={this.openForm}>\n        <Icon>add</Icon>\n        <p style={{ flexShrink: 0 }}>{buttonText}</p>\n      </OpenFormButton>\n    );\n  };\n\n  render() {\n    const { text } = this.state;\n    const { list } = this.props;\n    return this.state.formOpen ? (\n      <TrelloForm\n        text={text}\n        onChange={this.handleInputChange}\n        closeForm={this.closeForm}\n      >\n        <TrelloButton onClick={list ? this.handleAddList : this.handleAddCard}>\n          {list ? \"Add List\" : \"Add Card\"}\n        </TrelloButton>\n      </TrelloForm>\n    ) : (\n      <TrelloOpenForm list={list} onClick={this.openForm}>\n        {list ? \"Add another list\" : \"Add another card\"}\n      </TrelloOpenForm>\n    );\n  }\n}\n\nexport default connect()(TrelloCreate);\n","import React, { useState } from \"react\";\nimport TrelloCard from \"./TrelloCard\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { editTitle, deleteList } from \"../actions\";\nimport Icon from \"@material-ui/core/Icon\";\n\nconst ListContainer = styled.div`\n  background-color: #dfe3e6;\n  border-radius: 3px;\n  width: 300px;\n  padding: 8px;\n  height: 100%;\n  margin: 0 8px 0 0;\n`;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  border: none;\n  outline-color: blue;\n  border-radius: 3px;\n  margin-bottom: 3px;\n  padding: 5px;\n`;\n\nconst TitleContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  cursor: pointer;\n`;\n\nconst DeleteButton = styled(Icon)`\n  cursor: pointer;\n  transition: opacity 0.3s ease-in-out;\n  opacity: 0.4;\n  &:hover {\n    opacity: 0.8;\n  }\n`;\n\nconst ListTitle = styled.h4`\n  transition: background 0.3s ease-in;\n  ${TitleContainer}:hover & {\n    background: #ccc;\n  }\n`;\n\nconst TrelloList = ({ title, cards, listID, index, dispatch }) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [listTitle, setListTitle] = useState(title);\n\n  const renderEditInput = () => {\n    return (\n      <form onSubmit={handleFinishEditing}>\n        <StyledInput\n          type=\"text\"\n          value={listTitle}\n          onChange={handleChange}\n          autoFocus\n          onFocus={handleFocus}\n          onBlur={handleFinishEditing}\n        />\n      </form>\n    );\n  };\n\n  const handleFocus = e => {\n    e.target.select();\n  };\n\n  const handleChange = e => {\n    e.preventDefault();\n    setListTitle(e.target.value);\n  };\n\n  const handleFinishEditing = e => {\n    setIsEditing(false);\n    dispatch(editTitle(listID, listTitle));\n  };\n\n  const handleDeleteList = () => {\n    dispatch(deleteList(listID));\n  };\n\n  return (\n    <Draggable draggableId={String(listID)} index={index}>\n      {provided => (\n        <ListContainer\n          {...provided.draggableProps}\n          {...provided.dragHandleProps}\n          ref={provided.innerRef}\n        >\n          <Droppable droppableId={String(listID)} type=\"card\">\n            {provided => (\n              <div>\n                <div>\n                  {isEditing ? (\n                    renderEditInput()\n                  ) : (\n                    <TitleContainer onClick={() => setIsEditing(true)}>\n                      <ListTitle>{listTitle}</ListTitle>\n                      <DeleteButton onClick={handleDeleteList}>\n                        delete\n                      </DeleteButton>\n                    </TitleContainer>\n                  )}\n                </div>\n                <div {...provided.droppableProps} ref={provided.innerRef}>\n                  {cards.map((card, index) => (\n                    <TrelloCard\n                      key={card.id}\n                      text={card.text}\n                      id={card.id}\n                      index={index}\n                      listID={listID}\n                    />\n                  ))}\n                  {provided.placeholder}\n                  <TrelloCreate listID={listID} />\n                </div>\n              </div>\n            )}\n          </Droppable>\n        </ListContainer>\n      )}\n    </Draggable>\n  );\n};\n\nexport default connect()(TrelloList);\n","import React, { PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { sort, setActiveBoard } from \"../actions\";\nimport { Link } from \"react-router-dom\";\n\nconst ListsContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\n// TODO: Fix performance issue\n\nclass TrelloBoard extends PureComponent {\n  componentDidMount() {\n    // set active trello board here\n    const { boardID } = this.props.match.params;\n\n    this.props.dispatch(setActiveBoard(boardID));\n  }\n\n  onDragEnd = result => {\n    const { destination, source, draggableId, type } = result;\n\n    if (!destination) {\n      return;\n    }\n\n    this.props.dispatch(\n      sort(\n        source.droppableId,\n        destination.droppableId,\n        source.index,\n        destination.index,\n        draggableId,\n        type\n      )\n    );\n  };\n\n  render() {\n    const { lists, cards, match, boards } = this.props;\n    const { boardID } = match.params;\n    const board = boards[boardID];\n    if (!board) {\n      return <p>Board not found</p>;\n    }\n    const listOrder = board.lists;\n\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <Link to=\"/\" style={{ color: 'white'}}>Go Back</Link>\n        <h2 style={{ color: 'white'}} >{board.title}</h2>\n        <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n          {provided => (\n            <ListsContainer\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {listOrder.map((listID, index) => {\n                const list = lists[listID];\n                if (list) {\n                  const listCards = list.cards.map(cardID => cards[cardID]);\n\n                  return (\n                    <TrelloList\n                      listID={list.id}\n                      key={list.id}\n                      title={list.title}\n                      cards={listCards}\n                      index={index}\n                    />\n                  );\n                }\n              })}\n              {provided.placeholder}\n              <TrelloCreate list />\n            </ListsContainer>\n          )}\n        </Droppable>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists,\n  cards: state.cards,\n  boards: state.boards\n});\n\nexport default connect(mapStateToProps)(TrelloBoard);\n","import { CONSTANTS } from \"../actions\";\nimport uuid from \"uuidv4\";\n\nexport const setActiveBoard = id => {\n  return {\n    type: CONSTANTS.SET_ACTIVE_BOARD,\n    payload: id\n  };\n};\n\nexport const addBoard = title => {\n  const id = uuid();\n  return {\n    type: CONSTANTS.ADD_BOARD,\n    payload: { title, id }\n  };\n};\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Thumbnail = styled.div`\n  height: 280px;\n  width: 280px;\n  background: yellow;\n  padding: 10px;\n  margin: 8px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  border-radius: 60px;\n  box-shadow: 0 2px 4px grey;\n`;\n\nconst Title = styled.h4`\n  color: red;\n  text-decoration: none;\n`;\n\nconst BoardThumbnail = ({ title }) => {\n  console.log(title);\n  return (\n    <Thumbnail>\n      <Title>{title}</Title>\n    </Thumbnail>\n  );\n};\n\nexport default BoardThumbnail;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { addBoard } from \"../actions\";\nimport BoardThumbnail from \"./BoardThumbnail\";\n\nconst Thumbnails = styled.div`\n  flex: 1;\n  height: 50%;\n  margin: 0 auto;\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nconst HomeContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  box-sizing: border-box;\n`;\n\nconst CreateTitle = styled.h3`\n  font-size: 48px;\n  color: white;\n  font-weight: bold;\n  font-family: Arial, Helvetica, sans-serif;\n`;\n\nconst CreateInput = styled.input`\n  width: 400px;\n  height: 80px;\n  font-size: 22px;\n  padding: 10px;\n  box-sizing: border-box;\n  border-radius: 3px;\n  border: none;\n  outline-color: blue;\n  box-shadow: 0 2px 4px grey;\n  align-self: center;\n`;\n\n\nconst Home = ({ boards, boardOrder, dispatch }) => {\n  // this is the home site that shows you your boards and you can also create a Board here.\n\n  const [newBoardTitle, setNewBoardTitle] = useState(\"\");\n\n  const handleChange = e => {\n    setNewBoardTitle(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addBoard(newBoardTitle));\n  };\n\n  const renderBoards = () => {\n    return boardOrder.map(boardID => {\n      const board = boards[boardID];\n\n      return (\n        <Link\n          key={boardID}\n          to={`/${board.id}`}\n          style={{ textDecoration: \"none\" }}\n        >\n          <BoardThumbnail {...board} />\n        </Link>\n      );\n    });\n  };\n\n  const renderCreateBoard = () => {\n    return (\n      <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\n        <CreateTitle>Create a new Board</CreateTitle>\n        <CreateInput\n          onChange={handleChange}\n          value={newBoardTitle}\n          placeholder=\"Your boards title...\"\n          type=\"text\"\n        />\n      </form>\n    );\n  };\n\n  return (\n    <HomeContainer>\n      <Thumbnails>{renderBoards()}</Thumbnails>\n      {renderCreateBoard()}\n    </HomeContainer>\n  );\n};\n\nconst mapStateToProps = state => ({\n  boards: state.boards,\n  boardOrder: state.boardOrder\n});\n\nexport default connect(mapStateToProps)(Home);\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport TrelloBoard from \"../components/TrelloBoard\";\nimport Home from \"../components/Home\";\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <div>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/:boardID\" component={TrelloBoard} />\n      </div>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React, { PureComponent } from \"react\";\nimport TrelloList from \"./TrelloList\";\nimport { connect } from \"react-redux\";\nimport TrelloCreate from \"./TrelloCreate\";\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\";\nimport Routes from \"../routes\";\nimport { sort } from \"../actions\";\n\nclass App extends PureComponent {\n  render() {\n    return <Routes />;\n  }\n}\n\nexport default App;\n","\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n   \n    window.location.hostname === '[::1]' ||\n    \n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    \n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      \n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport Store from \"./store\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\nimport { createGlobalStyle } from \"styled-components\";\nimport $ from \"jquery\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { persistor, store } = Store();\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    background-color: #6363f3;\n    box-sizing: border-box;\n    transition: all 0.5s ease-in;\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <GlobalStyle />\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n$(document).bind(\"DOMNodeRemoved\", function(e) {\n  console.log(\"Removed: \" + e.target.nodeName);\n});\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}